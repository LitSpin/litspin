
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module HelloWorld_SoC(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// SEG7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// HPS //////////
	inout 		          		HPS_CONV_USB_N,
	output		    [14:0]		HPS_DDR3_ADDR,
	output		     [2:0]		HPS_DDR3_BA,
	output		          		HPS_DDR3_CAS_N,
	output		          		HPS_DDR3_CKE,
	output		          		HPS_DDR3_CK_N,
	output		          		HPS_DDR3_CK_P,
	output		          		HPS_DDR3_CS_N,
	output		     [3:0]		HPS_DDR3_DM,
	inout 		    [31:0]		HPS_DDR3_DQ,
	inout 		     [3:0]		HPS_DDR3_DQS_N,
	inout 		     [3:0]		HPS_DDR3_DQS_P,
	output		          		HPS_DDR3_ODT,
	output		          		HPS_DDR3_RAS_N,
	output		          		HPS_DDR3_RESET_N,
	input 		          		HPS_DDR3_RZQ,
	output		          		HPS_DDR3_WE_N,
	output		          		HPS_ENET_GTX_CLK,
	inout 		          		HPS_ENET_INT_N,
	output		          		HPS_ENET_MDC,
	inout 		          		HPS_ENET_MDIO,
	input 		          		HPS_ENET_RX_CLK,
	input 		     [3:0]		HPS_ENET_RX_DATA,
	input 		          		HPS_ENET_RX_DV,
	output		     [3:0]		HPS_ENET_TX_DATA,
	output		          		HPS_ENET_TX_EN,
	inout 		     [3:0]		HPS_FLASH_DATA,
	output		          		HPS_FLASH_DCLK,
	output		          		HPS_FLASH_NCSO,
	inout 		     [1:0]		HPS_GPIO,
	inout 		          		HPS_GSENSOR_INT,
	inout 		          		HPS_I2C1_SCLK,
	inout 		          		HPS_I2C1_SDAT,
	inout 		          		HPS_I2C2_SCLK,
	inout 		          		HPS_I2C2_SDAT,
	inout 		          		HPS_I2C_CONTROL,
	inout 		          		HPS_KEY,
	inout 		          		HPS_LED,
	output		          		HPS_SD_CLK,
	inout 		          		HPS_SD_CMD,
	inout 		     [3:0]		HPS_SD_DATA,
	output		          		HPS_SPIM_CLK,
	input 		          		HPS_SPIM_MISO,
	output		          		HPS_SPIM_MOSI,
	inout 		          		HPS_SPIM_SS,
	input 		          		HPS_UART_RX,
	output		          		HPS_UART_TX,
	input 		          		HPS_USB_CLKOUT,
	inout 		     [7:0]		HPS_USB_DATA,
	input 		          		HPS_USB_DIR,
	input 		          		HPS_USB_NXT,
	output		          		HPS_USB_STP
);

soc_system u0 (
	.clk_clk											(CLOCK_50),
	.reset_reset_n									(KEY[0]),
	
	.key_export										(KEY[3:1]),
	.leds_export									(LEDR),
	.osegs_new_signal								(HEX0),
	.osegs_new_signal_1							(HEX1),
	.osegs_new_signal_2							(HEX2),
	.osegs_new_signal_3							(HEX3),
	.osegs_new_signal_4							(HEX4),
	.osegs_new_signal_5							(HEX5),
	.sw_export										(SW),
	
	.hps_0_hps_io_hps_io_uart0_inst_RX		(HPS_UART_RX),
	.hps_0_hps_io_hps_io_uart0_inst_TX		(HPS_UART_TX),
	
	.hps_0_hps_io_hps_io_sdio_inst_CMD		(HPS_SD_CMD),
	.hps_0_hps_io_hps_io_sdio_inst_D0		(HPS_SD_DATA[0]),
	.hps_0_hps_io_hps_io_sdio_inst_D1		(HPS_SD_DATA[1]),
	.hps_0_hps_io_hps_io_sdio_inst_CLK		(HPS_SD_CLK),
	.hps_0_hps_io_hps_io_sdio_inst_D2		(HPS_SD_DATA[2]),
	.hps_0_hps_io_hps_io_sdio_inst_D3		(HPS_SD_DATA[3]),
	
	.memory_mem_a									(HPS_DDR3_ADDR),
	.memory_mem_ba									(HPS_DDR3_BA),
	.memory_mem_ck									(HPS_DDR3_CK_P),
	.memory_mem_ck_n								(HPS_DDR3_CK_N),
	.memory_mem_cke								(HPS_DDR3_CKE),
	.memory_mem_cs_n								(HPS_DDR3_CS_N),
	.memory_mem_ras_n								(HPS_DDR3_RAS_N),
	.memory_mem_cas_n								(HPS_DDR3_CAS_N),
	.memory_mem_we_n								(HPS_DDR3_WE_N),
	.memory_mem_reset_n							(HPS_DDR3_RESET_N),
	.memory_mem_dq									(HPS_DDR3_DQ),
	.memory_mem_dqs								(HPS_DDR3_DQS_P),
	.memory_mem_dqs_n								(HPS_DDR3_DQS_N),
	.memory_mem_odt								(HPS_DDR3_ODT),
	.memory_mem_dm									(HPS_DDR3_DM),
	.memory_oct_rzqin								(HPS_DDR3_RZQ)
	
);


//=======================================================
//  REG/WIRE declarations
//=======================================================




//=======================================================
//  Structural coding
//=======================================================



endmodule
